/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package konquest.ui;

import konquest.contrladoresUI.Render;
import java.awt.Frame;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;
import konquest.Manejadores.Tablero.ControladorDeColores;
import konquest.Escritores.EscritorDeMapas;
import konquest.mapa.Jugador;
import konquest.mapa.Mapa;
import konquest.mapa.PlanetaNeutral;

/**
 *
 * @author sergio
 */
public class EditadorMapas extends javax.swing.JDialog {

    private Mapa mapa;
    private File file;
    private Frame fr;

    /**
     * Creates new form EditadorMapas
     */
    public EditadorMapas(java.awt.Frame parent, boolean modal, Mapa mapa, File file, Frame fr) {
        super(parent, modal);
        this.mapa = mapa;
        this.file = file;
        this.fr = fr;
        ControladorDeColores c = new ControladorDeColores();
        c.generarColores(mapa.getJugadores());
        initComponents();
        lblNombre.setVisible(false);
        fieldNombre.setVisible(false);
        agregarComponentesDeMapaExistente();
    }

    public EditadorMapas(java.awt.Frame parent, boolean modal, Frame fr) {
        super(parent, modal);
        initComponents();
        this.fr = fr;
        btnSobrescribir.setVisible(false);
        agregarComponentesDeMapaNuevo();
        lblNombre.setVisible(false);
        fieldNombre.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbtJugadores = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        comBoxTipos = new javax.swing.JComboBox<>();
        lblNombre = new javax.swing.JLabel();
        fieldNombre = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        spinColumna = new javax.swing.JSpinner();
        spinFila = new javax.swing.JSpinner();
        ckBoxAzar = new javax.swing.JCheckBox();
        panelNoAzar = new javax.swing.JPanel();
        ckBoxPlanetas = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        comDue√±o = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        spinPorcentaje = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        spinProduccion = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        spinNaves = new javax.swing.JSpinner();
        panelAzar = new javax.swing.JPanel();
        spinNeutrales = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        fieldId = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        ckBoxMapaCiego = new javax.swing.JCheckBox();
        ckBoxAculativo = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        ckMostrarNaves = new javax.swing.JCheckBox();
        ckBosEstadistica = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        spinProduccionNeutrales = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnNuevo = new javax.swing.JButton();
        btnSobrescribir = new javax.swing.JButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Editador De Mapas");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));

        tbtJugadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "  ", "Nombre", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbtJugadores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbtJugadoresMouseClicked(evt);
            }
        });
        tbtJugadores.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tbtJugadoresKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(tbtJugadores);
        if (tbtJugadores.getColumnModel().getColumnCount() > 0) {
            tbtJugadores.getColumnModel().getColumn(0).setResizable(false);
            tbtJugadores.getColumnModel().getColumn(0).setPreferredWidth(14);
            tbtJugadores.getColumnModel().getColumn(1).setResizable(false);
            tbtJugadores.getColumnModel().getColumn(2).setResizable(false);
        }

        btnAgregar.setText("+");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        comBoxTipos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HUMANO", "DIFICIL", "FACIL" }));
        comBoxTipos.setEnabled(false);
        comBoxTipos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comBoxTiposItemStateChanged(evt);
            }
        });

        lblNombre.setText("Nombre");

        fieldNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldNombreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAgregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEliminar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comBoxTipos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnEliminar)
                    .addComponent(comBoxTipos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNombre)
                    .addComponent(fieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Jugador:");

        jPanel2.setBackground(new java.awt.Color(254, 254, 254));
        jPanel2.setEnabled(false);

        jLabel5.setText("Columnas:");

        jLabel6.setText("Filas:");

        spinColumna.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        spinFila.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        ckBoxAzar.setText("Al Azar");
        ckBoxAzar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckBoxAzarItemStateChanged(evt);
            }
        });
        ckBoxAzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckBoxAzarActionPerformed(evt);
            }
        });

        ckBoxPlanetas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckBoxPlanetasItemStateChanged(evt);
            }
        });

        jLabel12.setText("Planetas:");

        jLabel7.setText("Due√±o:");

        comDue√±o.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NEUTRAL" }));
        comDue√±o.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comDue√±oItemStateChanged(evt);
            }
        });
        comDue√±o.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comDue√±oActionPerformed(evt);
            }
        });

        jLabel8.setText("Porcentaje De Muertes:");

        spinPorcentaje.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 0.1d));
        spinPorcentaje.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinPorcentajeStateChanged(evt);
            }
        });
        spinPorcentaje.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                spinPorcentajeMouseClicked(evt);
            }
        });

        jLabel9.setText("Produccion:");

        spinProduccion.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spinProduccion.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinProduccionStateChanged(evt);
            }
        });

        jLabel13.setText("Naves Al Comienzo:");

        spinNaves.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spinNaves.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinNavesStateChanged(evt);
            }
        });

        javax.swing.GroupLayout panelNoAzarLayout = new javax.swing.GroupLayout(panelNoAzar);
        panelNoAzar.setLayout(panelNoAzarLayout);
        panelNoAzarLayout.setHorizontalGroup(
            panelNoAzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelNoAzarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelNoAzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelNoAzarLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(ckBoxPlanetas, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelNoAzarLayout.createSequentialGroup()
                        .addGroup(panelNoAzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelNoAzarLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinPorcentaje))
                            .addComponent(jLabel12)
                            .addGroup(panelNoAzarLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(comDue√±o, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelNoAzarLayout.createSequentialGroup()
                                .addGroup(panelNoAzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(panelNoAzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(spinProduccion, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                                    .addComponent(spinNaves))))
                        .addContainerGap())))
        );
        panelNoAzarLayout.setVerticalGroup(
            panelNoAzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelNoAzarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addGap(2, 2, 2)
                .addComponent(ckBoxPlanetas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelNoAzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comDue√±o, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelNoAzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(spinPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelNoAzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(spinProduccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelNoAzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(spinNaves, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        spinNeutrales.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel4.setBackground(javax.swing.UIManager.getDefaults().getColor("MenuItem.selectionBackground"));
        jLabel4.setText("Planetas Neutrales:");

        javax.swing.GroupLayout panelAzarLayout = new javax.swing.GroupLayout(panelAzar);
        panelAzar.setLayout(panelAzarLayout);
        panelAzarLayout.setHorizontalGroup(
            panelAzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAzarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spinNeutrales, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelAzarLayout.setVerticalGroup(
            panelAzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAzarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelAzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spinNeutrales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(23, 23, 23))
        );

        fieldId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldIdActionPerformed(evt);
            }
        });

        jLabel14.setText("Id:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ckBoxAzar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(panelAzar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel14))
                                .addGap(81, 81, 81)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(spinColumna)
                                    .addComponent(spinFila)
                                    .addComponent(fieldId)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(panelNoAzar, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 10, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(spinColumna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(spinFila, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(ckBoxAzar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelAzar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelNoAzar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(254, 254, 254));

        ckBoxMapaCiego.setText("Mapa Ciego");
        ckBoxMapaCiego.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckBoxMapaCiegoItemStateChanged(evt);
            }
        });

        ckBoxAculativo.setText("Produccion Acumulativa");
        ckBoxAculativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckBoxAculativoActionPerformed(evt);
            }
        });

        jLabel10.setText("Neutrales:");

        ckMostrarNaves.setText("Mostrar Naves");
        ckMostrarNaves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckMostrarNavesActionPerformed(evt);
            }
        });

        ckBosEstadistica.setText("Mostrar Estadisticas");
        ckBosEstadistica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckBosEstadisticaActionPerformed(evt);
            }
        });

        jLabel11.setText("Produccion:");

        spinProduccionNeutrales.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinProduccionNeutralesStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ckMostrarNaves)
                            .addComponent(ckBosEstadistica)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel11)
                        .addGap(45, 45, 45)
                        .addComponent(spinProduccionNeutrales, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ckMostrarNaves)
                .addGap(18, 18, 18)
                .addComponent(ckBosEstadistica)
                .addGap(56, 56, 56)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(spinProduccionNeutrales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel10)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ckBoxMapaCiego)
                            .addComponent(ckBoxAculativo))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ckBoxMapaCiego)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ckBoxAculativo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setText("Mapa:");

        jLabel3.setText("Opciones:");

        btnNuevo.setText("Nuevo Archivo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnSobrescribir.setText("Sobrescribir");
        btnSobrescribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSobrescribirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSobrescribir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNuevo))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnSobrescribir)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbtJugadoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbtJugadoresMouseClicked
        btnEliminar.setEnabled(true);
        comBoxTipos.setEnabled(true);
        System.out.println(mapa.getJugadores().get(tbtJugadores.getSelectedRow()).getTipo());
        switch (mapa.getJugadores().get(tbtJugadores.getSelectedRow()).getTipo()) {
            case Jugador.TIPO_HUMANO:
                comBoxTipos.setSelectedIndex(0);
                break;
            case Jugador.TIPO_DIFICIL:
                comBoxTipos.setSelectedIndex(1);
                break;
            case Jugador.TIPO_FACIL:
                comBoxTipos.setSelectedIndex(2);
                break;

        }
    }//GEN-LAST:event_tbtJugadoresMouseClicked

    private void comBoxTiposItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comBoxTiposItemStateChanged
        if (tbtJugadores.getSelectedRow() == -1) {
            comBoxTipos.setEnabled(false);
            btnEliminar.setEnabled(false);
        } else {
            mapa.getJugadores().get(tbtJugadores.getSelectedRow()).setTipo(comBoxTipos.getSelectedIndex() + 1);
            agregarJugadores();

        }

    }//GEN-LAST:event_comBoxTiposItemStateChanged

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        lblNombre.setVisible(true);
        fieldNombre.setVisible(true);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        Jugador jug = mapa.getJugadores().get(tbtJugadores.getSelectedRow());
        comDue√±o.removeItem(jug.getNombre());
        mapa.getJugadores().remove(jug);
        agregarJugadores();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void comDue√±oActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comDue√±oActionPerformed

        if (comDue√±o.getSelectedIndex() == 0) {
            System.out.println(ckBoxPlanetas.getSelectedItem());
            int numPlaneta = ckBoxPlanetas.getSelectedIndex();
            if (numPlaneta + 1 <= mapa.getPlanetas().size()) {
                System.out.println(mapa.getPlanetas().get(numPlaneta).getOwner().getPlanetas().size());
                Object[] atributos = new Object[4];
                atributos[0] = "\"" + ckBoxPlanetas.getSelectedItem() + "\"";
                atributos[1] = mapa.getPlanetas().get(numPlaneta).getNaves();
                atributos[2] = mapa.getPlanetas().get(numPlaneta).getProduccion();
                atributos[3] = mapa.getPlanetas().get(numPlaneta).getPorcentajeMuertes();
                PlanetaNeutral pn = new PlanetaNeutral(atributos);
                mapa.getPlanetasNeutrales().add(pn);

                mapa.getPlanetas().get(numPlaneta).getOwner().getPlanetas().remove(mapa.getPlanetas().get(numPlaneta));

                System.out.println("a borrar " + mapa.getPlanetas().get(ckBoxPlanetas.getSelectedIndex()).getNombre());
                System.out.println(ckBoxPlanetas.getSelectedIndex() + "ind");
                mapa.getPlanetas().remove(ckBoxPlanetas.getSelectedIndex());
                System.out.println("jusdaw" + mapa.getJugadores().get(0).getPlanetas().size());
                agregarJugadores();
                agregarPlanetas();

            }
        } else {
            if (ckBoxPlanetas.getSelectedIndex() + 1 <= mapa.getPlanetas().size()) {
                if (mapa.getPlanetas().get(ckBoxPlanetas.getSelectedIndex()).getOwner() != mapa.getJugadores().get(comDue√±o.getSelectedIndex() - 1)) {
                    Jugador ju = mapa.getJugadores().get(comDue√±o.getSelectedIndex() - 1);
                    ju.getPlanetas().remove(mapa.getPlanetas().get(ckBoxPlanetas.getSelectedIndex()));
                    mapa.getPlanetas().get(ckBoxPlanetas.getSelectedIndex()).setOwner(ju);
                    agregarJugadores();
                    agregarPlanetas();
                }
            } else {
                if (comDue√±o.getSelectedIndex() != 0) {
                    PlanetaNeutral pn = mapa.getPlanetasNeutrales().get(ckBoxPlanetas.getSelectedIndex() - mapa.getPlanetas().size());
                    mapa.getPlanetas().add(pn);
                    mapa.getPlanetasNeutrales().remove(pn);
                    pn.setOwner(mapa.getJugadores().get(comDue√±o.getSelectedIndex() - 1));
                    mapa.getJugadores().get(comDue√±o.getSelectedIndex() - 1).agregarPlaneta(pn);
                    pn.setNeutral(false);
                    agregarJugadores();
                    agregarPlanetas();
                }
            }

        }
    }//GEN-LAST:event_comDue√±oActionPerformed

    private void ckBoxPlanetasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckBoxPlanetasItemStateChanged
        if (ckBoxPlanetas.getItemCount() > 0) {

            System.out.println(mapa.getPlanetas().size() + "nor");
            System.out.println(mapa.getPlanetasNeutrales().size() + "neu");
            if (ckBoxPlanetas.getSelectedIndex() + 1 <= mapa.getPlanetas().size()) {
                System.out.println(mapa.getPlanetas().get(ckBoxPlanetas.getSelectedIndex()).getOwner().getNombre() + "dawdwads");
                for (int i = 0; i < mapa.getJugadores().size(); i++) {
                    if (mapa.getJugadores().get(i) == mapa.getPlanetas().get(ckBoxPlanetas.getSelectedIndex()).getOwner()) {
                        comDue√±o.setSelectedIndex(i + 1);
                        break;
                    }
                }

                spinProduccion.setValue(mapa.getPlanetas().get(ckBoxPlanetas.getSelectedIndex()).getProduccion());
                spinPorcentaje.setValue(mapa.getPlanetas().get(ckBoxPlanetas.getSelectedIndex()).getPorcentajeMuertes());
                spinNaves.setValue(mapa.getPlanetas().get(ckBoxPlanetas.getSelectedIndex()).getNaves());
            } else {
                comDue√±o.setSelectedIndex(0);
                spinProduccion.setValue(mapa.getPlanetasNeutrales().get(ckBoxPlanetas.getSelectedIndex() - mapa.getPlanetas().size()).getProduccion());
                spinPorcentaje.setValue(mapa.getPlanetasNeutrales().get(ckBoxPlanetas.getSelectedIndex() - mapa.getPlanetas().size()).getPorcentajeMuertes());
                spinNaves.setValue(mapa.getPlanetasNeutrales().get(ckBoxPlanetas.getSelectedIndex() - mapa.getPlanetas().size()).getNaves());
            }
        }
    }//GEN-LAST:event_ckBoxPlanetasItemStateChanged

    private void ckBoxAzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckBoxAzarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckBoxAzarActionPerformed

    private void ckBoxAzarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckBoxAzarItemStateChanged
        ocultarAzar(ckBoxAzar.isSelected());
    }//GEN-LAST:event_ckBoxAzarItemStateChanged

    private void comDue√±oItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comDue√±oItemStateChanged

    }//GEN-LAST:event_comDue√±oItemStateChanged

    private void tbtJugadoresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbtJugadoresKeyTyped
        comDue√±o.removeAllItems();
        for (int i = 0; i < mapa.getJugadores().size(); i++) {
            System.out.println(i + " " + (String) tbtJugadores.getValueAt(i, 1));
            mapa.getJugadores().get(i).setNombre((String) tbtJugadores.getValueAt(i, 1));

            if (i == 0) {
                comDue√±o.addItem("NEUTRAL");
            }
            comDue√±o.addItem(mapa.getJugadores().get(i).getNombre());
        }
        agregarPlanetas();
        agregarJugadores();
    }//GEN-LAST:event_tbtJugadoresKeyTyped

    private void fieldNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldNombreActionPerformed

        Object[] atrinutosJugador = new Object[]{"\"" + fieldNombre.getText() + "\"", null, Jugador.TIPO_HUMANO};
        mapa.getJugadores().add(new Jugador(atrinutosJugador));
        comDue√±o.addItem(mapa.getJugadores().get(mapa.getJugadores().size() - 1).getNombre());
        agregarComponentesDeMapaExistente();
        lblNombre.setVisible(false);
        fieldNombre.setVisible(false);
    }//GEN-LAST:event_fieldNombreActionPerformed

    private void spinPorcentajeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_spinPorcentajeMouseClicked

    }//GEN-LAST:event_spinPorcentajeMouseClicked

    private void spinPorcentajeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinPorcentajeStateChanged
        if (ckBoxPlanetas.getSelectedIndex() + 1 <= mapa.getPlanetas().size()) {
            mapa.getPlanetas().get(ckBoxPlanetas.getSelectedIndex()).setPorcentajeMuertes((Double) spinPorcentaje.getValue());
        } else {
            mapa.getPlanetasNeutrales().get(ckBoxPlanetas.getSelectedIndex() - mapa.getPlanetas().size()).setPorcentajeMuertes((Double) spinPorcentaje.getValue());
        }
    }//GEN-LAST:event_spinPorcentajeStateChanged

    private void spinProduccionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinProduccionStateChanged
        if (ckBoxPlanetas.getSelectedIndex() + 1 <= mapa.getPlanetas().size()) {
            mapa.getPlanetas().get(ckBoxPlanetas.getSelectedIndex()).setProduccion((Integer) spinProduccion.getValue());
        } else {
            mapa.getPlanetasNeutrales().get(ckBoxPlanetas.getSelectedIndex() - mapa.getPlanetas().size()).setProduccion((Integer) spinProduccion.getValue());
        }
    }//GEN-LAST:event_spinProduccionStateChanged

    private void spinNavesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinNavesStateChanged
        if (ckBoxPlanetas.getSelectedIndex() + 1 <= mapa.getPlanetas().size()) {
            mapa.getPlanetas().get(ckBoxPlanetas.getSelectedIndex()).setNaves((Integer) spinNaves.getValue());
        } else {
            mapa.getPlanetasNeutrales().get(ckBoxPlanetas.getSelectedIndex() - mapa.getPlanetas().size()).setNaves((Integer) spinNaves.getValue());
        }
    }//GEN-LAST:event_spinNavesStateChanged

    private void ckBoxMapaCiegoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckBoxMapaCiegoItemStateChanged
        mapa.setMapaCiego(ckBoxMapaCiego.isSelected());
    }//GEN-LAST:event_ckBoxMapaCiegoItemStateChanged

    private void ckBoxAculativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckBoxAculativoActionPerformed
        mapa.setAcumular(ckBoxAculativo.isSelected());
    }//GEN-LAST:event_ckBoxAculativoActionPerformed

    private void ckMostrarNavesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckMostrarNavesActionPerformed
        mapa.getConfiNeutrales().setMostrarNaves(ckMostrarNaves.isSelected());
    }//GEN-LAST:event_ckMostrarNavesActionPerformed

    private void ckBosEstadisticaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckBosEstadisticaActionPerformed
        mapa.getConfiNeutrales().setMostrarEstadisticas(ckBosEstadistica.isSelected());
    }//GEN-LAST:event_ckBosEstadisticaActionPerformed

    private void spinProduccionNeutralesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinProduccionNeutralesStateChanged
        mapa.getConfiNeutrales().setProduccion((Integer) spinProduccionNeutrales.getValue());
    }//GEN-LAST:event_spinProduccionNeutralesStateChanged

    private void btnSobrescribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSobrescribirActionPerformed
        EscritorDeMapas edm = new EscritorDeMapas();
        edm.escribirMapa(mapa, edm.eliminarTextoDeFile(file));
        JOptionPane.showMessageDialog(this, "Guardado Con Exito");
    }//GEN-LAST:event_btnSobrescribirActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jfc.showOpenDialog(this);
        file = jfc.getSelectedFile();
        if (file != null) {
            IngresoDeNombre i = new IngresoDeNombre(fr, true);
            i.setVisible(true);
            if (i.getNombre() != null) {

                EscritorDeMapas edm = new EscritorDeMapas();
                try {
                    edm.escribirMapa(mapa, edm.crearFile(file, i.getNombre()));
                    JOptionPane.showMessageDialog(this, "Guardado Con Exito");
                } catch (Exception e) {
                }

            }

        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void fieldIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldIdActionPerformed
        mapa.setId(fieldId.getText());
    }//GEN-LAST:event_fieldIdActionPerformed

    private void ocultarAzar(boolean azar) {
        if (azar) {
            mapa.setAlAzar(azar);
            panelNoAzar.setVisible(false);
            panelAzar.setVisible(true);
        } else {
            mapa.setAlAzar(azar);
            panelNoAzar.setVisible(true);
            panelAzar.setVisible(false);
        }
    }

    private void agregarPlanetas() {
        ckBoxPlanetas.removeAllItems();
        for (int i = 0; i < mapa.getPlanetas().size(); i++) {
            ckBoxPlanetas.addItem(mapa.getPlanetas().get(i).getNombre());
        }
        for (int i = 0; i < mapa.getPlanetasNeutrales().size(); i++) {
            ckBoxPlanetas.addItem(mapa.getPlanetasNeutrales().get(i).getNombre());
        }

    }

    /**
     * @param args the command line arguments
     */
    private void agregarComponentesDeMapaExistente() {
        agregarJugadores();
        agregarPlanetas();
        spinNeutrales.setValue(mapa.getPlanetasNeutrales().size());
        spinColumna.setValue(mapa.getDimension().width);
        spinFila.setValue(mapa.getDimension().height);

        fieldId.setText(mapa.getId());
        ckBoxAzar.setSelected(mapa.isAlAzar());
        ocultarAzar(mapa.isAlAzar());
        ckBoxMapaCiego.setVisible(mapa.isMapaCiego());

        ckBoxAculativo.setSelected(mapa.isMapaCiego());
        ckBoxAculativo.setSelected(mapa.isAcumular());

        ckBosEstadistica.setSelected(mapa.getConfiNeutrales().isMostrarEstadisticas());
        ckMostrarNaves.setSelected(mapa.getConfiNeutrales().isMostrarNaves());
        spinProduccionNeutrales.setValue(mapa.getConfiNeutrales().getProduccion());

    }

    private void agregarJugadores() {

        ArrayList<Jugador> jugadores = mapa.getJugadores();
        tbtJugadores.setDefaultRenderer(Object.class, new Render());
        DefaultTableModel dtm = (DefaultTableModel) tbtJugadores.getModel();
        int aux = comDue√±o.getItemCount();

        int rows = dtm.getRowCount();
        for (int i = 0; i < rows; i++) {
            dtm.removeRow(0);
        }
        for (int i = 0; i < jugadores.size(); i++) {
            if (aux == 1) {
                comDue√±o.addItem(jugadores.get(i).getNombre());
            }

            JLabel jlabelcolor = new JLabel();
            jlabelcolor.setBackground(jugadores.get(i).getColor());

            jlabelcolor.setOpaque(true);
            String tipo = null;
            switch (jugadores.get(i).getTipo()) {
                case Jugador.TIPO_HUMANO:
                    tipo = "HUMANO";
                    break;
                case Jugador.TIPO_DIFICIL:
                    tipo = "DIFICIL";
                    break;
                case Jugador.TIPO_FACIL:
                    tipo = "FACIL";
                    break;
            }
            dtm.addRow(new Object[]{jlabelcolor, jugadores.get(i).getNombre(), tipo});

        }
    }

    private void agregarComponentesDeMapaNuevo() {

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSobrescribir;
    private javax.swing.JCheckBox ckBosEstadistica;
    private javax.swing.JCheckBox ckBoxAculativo;
    private javax.swing.JCheckBox ckBoxAzar;
    private javax.swing.JCheckBox ckBoxMapaCiego;
    private javax.swing.JComboBox<String> ckBoxPlanetas;
    private javax.swing.JCheckBox ckMostrarNaves;
    private javax.swing.JComboBox<String> comBoxTipos;
    private javax.swing.JComboBox<String> comDue√±o;
    private javax.swing.JTextField fieldId;
    private javax.swing.JTextField fieldNombre;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JPanel panelAzar;
    private javax.swing.JPanel panelNoAzar;
    private javax.swing.JSpinner spinColumna;
    private javax.swing.JSpinner spinFila;
    private javax.swing.JSpinner spinNaves;
    private javax.swing.JSpinner spinNeutrales;
    private javax.swing.JSpinner spinPorcentaje;
    private javax.swing.JSpinner spinProduccion;
    private javax.swing.JSpinner spinProduccionNeutrales;
    private javax.swing.JTable tbtJugadores;
    // End of variables declaration//GEN-END:variables
}
